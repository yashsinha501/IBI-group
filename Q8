OUTPUT =>  1 4 3 2 


1. `console.log(1);`: This is a synchronous operation, so it will be the first thing logged to the console. The output will be `1`.

2. `setTimeout(function(){console.log(2)}, 1000);`: This is an asynchronous operation using `setTimeout`. It schedules the callback function
to be executed after 1000 milliseconds (1 second). Since it is asynchronous, it won't block the execution of the rest of the code. The callback will 
be executed later, so `2` will not be logged immediately.

3. `setTimeout(function(){console.log(3)}, 0);`: This is another asynchronous operation using `setTimeout`. Despite the delay being set to 0 milliseconds, it doesn't mean the callback will be executed immediately. Instead, it will be added to the event queue and executed after the synchronous code has finished executing. As a result, `3` will be logged after `1` and `4`, but before `2`.

4. console.log(4);: This is another synchronous operation, so it will be the third thing logged to the console after `1`. The output will be `4`.

Now, the event queue looks like this:
